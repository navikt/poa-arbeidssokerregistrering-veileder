name: Build, push, and deploy

on:
  push:
    branches:
      - main
      - dev/*

jobs:
  test-and-build-cdn-docker:
    name: Run tests, build, push assets to CDN and publish Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      packages: 'write'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: "20.9.0"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - name: Install
        run: npm install --no-save --no-audit --prefer-offline --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Test
        run: npm run test:ci

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_ASSET_PREFIX: https://cdn.nav.no/paw/arbeidssokerregistrering-for-veileder

      - name: Upload static files to NAV CDN
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: paw
          source: ./.next/static
          destination: arbeidssokerregistrering-for-veileder/_next

      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: paw
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev
    needs: [test-and-build-cdn-docker]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev-gcp/nais.yaml
          VAR: image=${{ needs.test-and-build-cdn-docker.outputs.image }}

  apply-apitoken-unleash:
    name: Legger til ApiToken for Unleash
    runs-on: ubuntu-latest
    needs: [test-and-build-cdn-docker]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: deploy to dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev-gcp/unleash-apitoken.yaml
#      - name: deploy to prod
#        uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: .nais/prod-gcp/unleash-apitoken.yaml
